#!/usr/bin/env perl

local $/ = undef;
open FILE, $ARGV[0] or die "Couldn't open file: $!";
binmode FILE;
my $str = <FILE>;
close FILE;

my $func = 96;
my $code = 0;

my @lines = split /\n/, $str;
@lines[0] =~ s/..\K(?=.)/\\x/sg;
substr(@lines[0], 0, 0, 'int (*a)() = "\x');
@lines[0] .= '";';

print "enum { NONE, PTR__, INT__, CHR__, STR__, EXT__ };\n";
print "const int OUTPUT = ";

my $ot;
my $ov;

if (!length(@lines[2] // '')) {
    @lines[2] = $ARGV[1];
}

if (!length(@lines[2] // '')) {
    $ot = "NONE";
    $ov = "void *";
} elsif (@lines[2] eq 'p') {
    $ot = "PTR__";
    $ov = "void *";
} elsif (@lines[2] eq 'i') {
    $ot = "INT__";
    $ov = "int";
} elsif (@lines[2] eq 'c') {
    $ot = "CHR__";
    $ov = "char";
} elsif (@lines[2] eq 's') {
    $ot = "STR__";
    $ov = "char *";
} elsif (@lines[2] eq 'r') {
    $ot = "EXT__";
    $ov = "int";
}

print $ot . ";\n";

print @lines[0];

if ($code == 0) {
    print "int main(int C, char **A) {\n";
    print "    $ov RET__ = a(@lines[1]);\n";
    print "    if (OUTPUT == INT__) \n";
    print "        printf(\"%d\\n\", (int) RET__);\n";
    print "    else if (OUTPUT == CHR__) \n";
    print "        printf(\"%c\\n\", (char) RET__);\n";
    print "    else if (OUTPUT == STR__) \n";
    print "        printf(\"%s\\n\", (char *) RET__);\n";
    print "    else if (OUTPUT == EXT__)\n";
    print "        return (int) RET__;\n";
    print "    return 0;\n";
    print "}";
}
